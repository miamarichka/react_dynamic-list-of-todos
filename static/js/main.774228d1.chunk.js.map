{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoList","todos","selectedTodo","clickHandler","className","map","todo","id","title","completed","classNames","type","onClick","SELECTED_OPTIONS","TodoFilter","onSelectedOption","onInputChange","inputValue","onClearQuery","onChange","e","target","value","option","toLowerCase","placeholder","style","pointerEvents","trim","Loader","TodoModal","user","onCloseBtn","href","email","name","App","state","todosFromServer","currentTodo","isDataReady","isClickedOnTodos","query","onTodoBtnClick","setState","loadUserInfo","closeModal","selectedTodos","filterByQuery","visibleTodos","filteredTodos","filter","includes","clearQuery","a","userFromServer","loadTodos","this","todosToRender","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.774228d1.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  clickHandler: (userId:number, todo:Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  clickHandler,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const {\n          id, title, userId, completed,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => clickHandler(userId, todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    { 'fa-eye': todo.id !== selectedTodo?.id },\n                    { 'fa-eye-slash': todo.id === selectedTodo?.id })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  onSelectedOption: (option: string) => void;\n  onInputChange: (query: string) => void;\n  inputValue: string,\n  onClearQuery: ()=> void,\n};\n\nconst SELECTED_OPTIONS = ['All', 'Active', 'Completed'];\n\nexport const TodoFilter: React.FC<Props> = ({\n  onSelectedOption,\n  onInputChange,\n  inputValue,\n  onClearQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => (onSelectedOption(e.target.value))}\n          >\n            {SELECTED_OPTIONS.map(option => {\n              return (\n                <option\n                  value={option.toLowerCase()}\n                  key={option}\n                >\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(e) => onInputChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue.trim() && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  user: User | null,\n  todo: Todo | null,\n  onCloseBtn: ()=>void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ user, todo, onCloseBtn }) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => (onCloseBtn())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`\"mailto:${user?.email}\"`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos, getUser } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\ntype State = {\n  todosFromServer: Todo[],\n  user: User | null,\n  currentTodo: Todo | null,\n  isDataReady: boolean,\n  isClickedOnTodos: boolean,\n  query: string,\n  option: string,\n};\n\nexport class App extends React.Component {\n  state: Readonly<State> = {\n    todosFromServer: [],\n    user: null,\n    currentTodo: null,\n    isDataReady: false,\n    isClickedOnTodos: false,\n    query: '',\n    option: 'all',\n  };\n\n  componentDidMount(): void {\n    this.loadTodos();\n  }\n\n  onTodoBtnClick = (userId: number, todo:Todo) => {\n    this.setState({\n      isClickedOnTodos: true,\n      isDataReady: false,\n      currentTodo: todo,\n    });\n\n    this.loadUserInfo(userId);\n  };\n\n  closeModal = () => {\n    this.setState({\n      isClickedOnTodos: false,\n      user: null,\n      currentTodo: null,\n    });\n  };\n\n  selectedTodos = (option: string) => {\n    this.setState({ option });\n  };\n\n  filterByQuery = (query:string) => {\n    this.setState({ query });\n  };\n\n  visibleTodos = () => {\n    const {\n      todosFromServer, option, query,\n    } = this.state;\n    let selectedTodos:Todo[] = todosFromServer;\n\n    const filteredTodos: Todo[] = selectedTodos.filter((todo: Todo) => {\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    });\n\n    switch (option) {\n      case 'active':\n        selectedTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        selectedTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      case 'all':\n        selectedTodos = filteredTodos;\n        break;\n      default:\n        selectedTodos = filteredTodos;\n    }\n\n    return selectedTodos;\n  };\n\n  clearQuery = () => {\n    this.setState({\n      query: '',\n    });\n  };\n\n  loadUserInfo = async (userId:number) => {\n    const userFromServer = await getUser(userId);\n\n    this.setState({\n      user: userFromServer,\n      isDataReady: true,\n    });\n  };\n\n  loadTodos = async () => {\n    const todosFromServer = await getTodos();\n\n    this.setState({\n      todosFromServer,\n      isDataReady: true,\n    });\n  };\n\n  render() {\n    const {\n      isDataReady, isClickedOnTodos, user, query, currentTodo,\n    } = this.state;\n    const todosToRender = this.visibleTodos();\n\n    return (\n      <>\n        <div className=\"section\">\n          <div className=\"container\">\n            <div className=\"box\">\n              <h1 className=\"title\">Todos:</h1>\n\n              <div className=\"block\">\n                <TodoFilter\n                  onSelectedOption={this.selectedTodos}\n                  onInputChange={this.filterByQuery}\n                  inputValue={query}\n                  onClearQuery={this.clearQuery}\n                />\n              </div>\n\n              <div className=\"block\">\n                {!isDataReady && <Loader />}\n                <TodoList\n                  todos={todosToRender}\n                  selectedTodo={currentTodo}\n                  clickHandler={this.onTodoBtnClick}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {(!isDataReady || isClickedOnTodos)\n          && (\n            <TodoModal\n              user={user}\n              todo={currentTodo}\n              onCloseBtn={this.closeModal}\n            />\n          )}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}